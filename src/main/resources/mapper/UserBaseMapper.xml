<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szw.dream.mapper.UserBaseMapper">
  <resultMap id="BaseResultMap" type="com.szw.dream.po.UserBase">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="user_role" jdbcType="TINYINT" property="userRole" />
    <result column="register_source" jdbcType="TINYINT" property="registerSource" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="birthday" jdbcType="BIGINT" property="birthday" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="mobile_bind_time" jdbcType="TIMESTAMP" property="mobileBindTime" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="email_bind_time" jdbcType="TIMESTAMP" property="emailBindTime" />
    <result column="face" jdbcType="VARCHAR" property="face" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="push_token" jdbcType="VARCHAR" property="pushToken" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    uid, user_role, register_source, user_name, nick_name, gender, birthday, signature, 
    mobile, mobile_bind_time, email, email_bind_time, face, create_time, update_time, 
    push_token
  </sql>
  <select id="selectByExample" parameterType="com.szw.dream.po.UserBaseExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_base
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.szw.dream.po.UserBase">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_base (uid, user_role, register_source, 
      user_name, nick_name, gender, 
      birthday, signature, mobile, 
      mobile_bind_time, email, email_bind_time, 
      face, create_time, update_time, 
      push_token)
    values (#{uid,jdbcType=BIGINT}, #{userRole,jdbcType=TINYINT}, #{registerSource,jdbcType=TINYINT}, 
      #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{birthday,jdbcType=BIGINT}, #{signature,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{mobileBindTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, #{emailBindTime,jdbcType=TIMESTAMP}, 
      #{face,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{pushToken,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.szw.dream.po.UserBase">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      uid,
      <if test="userRole != null">
        user_role,
      </if>
      <if test="registerSource != null">
        register_source,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="mobileBindTime != null">
        mobile_bind_time,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="emailBindTime != null">
        email_bind_time,
      </if>
      <if test="face != null">
        face,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="pushToken != null">
        push_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uid,jdbcType=BIGINT},
      <if test="userRole != null">
        #{userRole,jdbcType=TINYINT},
      </if>
      <if test="registerSource != null">
        #{registerSource,jdbcType=TINYINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=BIGINT},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileBindTime != null">
        #{mobileBindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailBindTime != null">
        #{emailBindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="face != null">
        #{face,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushToken != null">
        #{pushToken,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.szw.dream.po.UserBase">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_base
    <set>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=TINYINT},
      </if>
      <if test="registerSource != null">
        register_source = #{registerSource,jdbcType=TINYINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=BIGINT},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileBindTime != null">
        mobile_bind_time = #{mobileBindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailBindTime != null">
        email_bind_time = #{emailBindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="face != null">
        face = #{face,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushToken != null">
        push_token = #{pushToken,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.szw.dream.po.UserBase">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_base
    set user_role = #{userRole,jdbcType=TINYINT},
      register_source = #{registerSource,jdbcType=TINYINT},
      user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=BIGINT},
      signature = #{signature,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      mobile_bind_time = #{mobileBindTime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      email_bind_time = #{emailBindTime,jdbcType=TIMESTAMP},
      face = #{face,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      push_token = #{pushToken,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>